{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAVICHANDRU\\\\Projects\\\\React JS\\\\payment-integration\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (amount === \"\") {\n      alert(\"Please enter amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_KhDzcR49ox6p0k\",\n        // Replace with your test key\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: \"Ravi\",\n          email: \"ravi@gmail.com\",\n          contact: \"1234567891\"\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        },\n        // Add card details for test mode\n        card: {\n          number: cardNumber,\n          expiry: expiryDate,\n          cvv: cvv\n        }\n      };\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Razor Pay Payment Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter card number\",\n      value: cardNumber,\n      onChange: e => setCardNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter expiry date (MM/YY)\",\n      value: expiryDate,\n      onChange: e => setExpiryDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter CVV\",\n      value: cvv,\n      onChange: e => setCvv(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GcN3Ti064agmU38+rtdzP++yzbc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","amount","setAmount","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvv","setCvv","handleSubmit","e","preventDefault","alert","options","key","currency","name","description","handler","response","razorpay_payment_id","prefill","email","contact","notes","address","theme","color","card","number","expiry","pay","window","Razorpay","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/RAVICHANDRU/Projects/React JS/payment-integration/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [amount, setAmount] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryDate, setExpiryDate] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (amount === \"\") {\n      alert(\"Please enter amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_KhDzcR49ox6p0k\", // Replace with your test key\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: \"Ravi\",\n          email: \"ravi@gmail.com\",\n          contact: \"1234567891\",\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\",\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n        // Add card details for test mode\n        card: {\n          number: cardNumber,\n          expiry: expiryDate,\n          cvv: cvv,\n        },\n      };\n\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Razor Pay Payment Integration</h2>\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"Enter the amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <br />\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"Enter card number\"\n        value={cardNumber}\n        onChange={(e) => setCardNumber(e.target.value)}\n      />\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"Enter expiry date (MM/YY)\"\n        value={expiryDate}\n        onChange={(e) => setExpiryDate(e.target.value)}\n      />\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"Enter CVV\"\n        value={cvv}\n        onChange={(e) => setCvv(e.target.value)}\n      />\n      <br />\n      <br />\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}