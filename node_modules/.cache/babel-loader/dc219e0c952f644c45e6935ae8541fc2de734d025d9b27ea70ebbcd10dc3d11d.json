{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAVICHANDRU\\\\Projects\\\\React JS\\\\payment-integration\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayComponent = () => {\n  _s();\n  const [customerId, setCustomerId] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  useEffect(() => {\n    const initializeRazorpay = async () => {\n      try {\n        // Create customer\n        const customerData = {\n          name: name,\n          contact: mobile,\n          email: email,\n          fail_existing: 0\n        };\n        const customerResponse = await fetch(\"https://api.razorpay.com/v1/customers\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa('rzp_test_Bv7ynRgcpldwRg:03SPtWNWANi7gLRTIPPjX4T3')\n          },\n          body: JSON.stringify(customerData)\n        });\n        if (!customerResponse.ok) {\n          const error = await customerResponse.json();\n          throw new Error(`Razorpay customer creation failed: ${JSON.stringify(error)}`);\n        }\n        const customer = await customerResponse.json();\n        setCustomerId(customer.id);\n\n        // Create order\n        const orderData = {\n          amount: amount * 100,\n          currency: \"INR\",\n          receipt: \"receipt#1\",\n          customer_id: customer.id\n        };\n        const orderResponse = await fetch(\"https://api.razorpay.com/v1/orders\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa('rzp_test_Bv7ynRgcpldwRg:03SPtWNWANi7gLRTIPPjX4T3')\n          },\n          body: JSON.stringify(orderData)\n        });\n        if (!orderResponse.ok) {\n          const error = await orderResponse.json();\n          throw new Error(`Razorpay order creation failed: ${JSON.stringify(error)}`);\n        }\n        const order = await orderResponse.json();\n        if (order.id) {\n          setOrderId(order.id);\n          sessionStorage.setItem('customerId', customer.id);\n          sessionStorage.setItem('orderId', order.id);\n        } else {\n          console.error('Razorpay order creation failed:', order);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n    initializeRazorpay();\n  }, [name, amount, email, mobile]);\n  useEffect(() => {\n    // Fetch customer and order information using IDs from sessionStorage\n    const fetchCustomerOrderInfo = async () => {\n      const storedCustomerId = sessionStorage.getItem('customerId');\n      const storedOrderId = sessionStorage.getItem('orderId');\n      if (storedCustomerId && storedOrderId) {\n        setCustomerId(storedCustomerId);\n        setOrderId(storedOrderId);\n      }\n    };\n    fetchCustomerOrderInfo();\n  }, []);\n  const handlePayment = e => {\n    e.preventDefault();\n    if (amount === \"\") {\n      alert(\"Please enter the amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_Bv7ynRgcpldwRg\",\n        // Add your Razorpay key here\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          if (response.razorpay_order_id) {\n            // Use response.razorpay_order_id as the order ID\n            alert(\"ORDER ID: \" + response.razorpay_order_id);\n          } else {\n            // Handle the case where order ID is not available\n            alert(\"Order ID is not available\");\n          }\n\n          // Use response.razorpay_payment_id as the payment ID\n          alert(\"PAYMENT ID: \" + response.razorpay_payment_id);\n        },\n        prefill: {\n          name: name,\n          email: email,\n          contact: mobile\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        },\n        customer_id: customerId,\n        order_id: orderId,\n        save: 1\n      };\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Razor Pay Payment Integration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          placeholder: \"Mobile Number\",\n          value: mobile,\n          onChange: e => setMobile(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handlePayment,\n          children: \"Submit Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Customer ID: \", customerId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(RazorpayComponent, \"EXxRZRm0ZcszgpnmgROYv+9Hb/M=\");\n_c = RazorpayComponent;\nexport default RazorpayComponent;\nvar _c;\n$RefreshReg$(_c, \"RazorpayComponent\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","RazorpayComponent","_s","customerId","setCustomerId","orderId","setOrderId","name","setName","email","setEmail","mobile","setMobile","amount","setAmount","initializeRazorpay","customerData","contact","fail_existing","customerResponse","fetch","method","headers","btoa","body","JSON","stringify","ok","error","json","Error","customer","id","orderData","currency","receipt","customer_id","orderResponse","order","sessionStorage","setItem","console","message","fetchCustomerOrderInfo","storedCustomerId","getItem","storedOrderId","handlePayment","e","preventDefault","alert","options","key","description","handler","response","razorpay_order_id","razorpay_payment_id","prefill","notes","address","theme","color","order_id","save","pay","window","Razorpay","open","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/RAVICHANDRU/Projects/React JS/payment-integration/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './style.css';\n\nconst RazorpayComponent = () => {\n  const [customerId, setCustomerId] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  useEffect(() => {\n    const initializeRazorpay = async () => {\n      try {\n        // Create customer\n        const customerData = {\n          name: name,\n          contact: mobile,\n          email: email,\n          fail_existing: 0,\n        };\n\n        const customerResponse = await fetch(\"https://api.razorpay.com/v1/customers\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa('rzp_test_Bv7ynRgcpldwRg:03SPtWNWANi7gLRTIPPjX4T3'),\n          },\n          body: JSON.stringify(customerData),\n        });\n\n        if (!customerResponse.ok) {\n          const error = await customerResponse.json();\n          throw new Error(`Razorpay customer creation failed: ${JSON.stringify(error)}`);\n          \n        }\n\n        const customer = await customerResponse.json();\n        setCustomerId(customer.id);\n\n        // Create order\n        const orderData = {\n          amount: amount * 100,\n          currency: \"INR\",\n          receipt: \"receipt#1\",\n          customer_id: customer.id,\n        };\n\n        const orderResponse = await fetch(\"https://api.razorpay.com/v1/orders\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic ' + btoa('rzp_test_Bv7ynRgcpldwRg:03SPtWNWANi7gLRTIPPjX4T3'),\n          },\n          body: JSON.stringify(orderData),\n        });\n\n        if (!orderResponse.ok) {\n          const error = await orderResponse.json();\n          throw new Error(`Razorpay order creation failed: ${JSON.stringify(error)}`);\n        }\n\n        const order = await orderResponse.json();\n\n        if (order.id) {\n          setOrderId(order.id);\n          sessionStorage.setItem('customerId', customer.id);\n          sessionStorage.setItem('orderId', order.id);\n        } else {\n          console.error('Razorpay order creation failed:', order);\n        }\n\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    initializeRazorpay();\n  }, [name, amount, email, mobile]);\n\n  useEffect(() => {\n    // Fetch customer and order information using IDs from sessionStorage\n    const fetchCustomerOrderInfo = async () => {\n      const storedCustomerId = sessionStorage.getItem('customerId');\n      const storedOrderId = sessionStorage.getItem('orderId');\n\n      if (storedCustomerId && storedOrderId) {\n        setCustomerId(storedCustomerId);\n        setOrderId(storedOrderId);\n      }\n    };\n\n    fetchCustomerOrderInfo();\n  }, []);\n\n  const handlePayment = (e) => {\n    e.preventDefault();\n    if (amount === \"\") {\n      alert(\"Please enter the amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_Bv7ynRgcpldwRg\", // Add your Razorpay key here\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          if (response.razorpay_order_id) {\n            // Use response.razorpay_order_id as the order ID\n            alert(\"ORDER ID: \" + response.razorpay_order_id);\n          } else {\n            // Handle the case where order ID is not available\n            alert(\"Order ID is not available\");\n          }\n\n          // Use response.razorpay_payment_id as the payment ID\n          alert(\"PAYMENT ID: \" + response.razorpay_payment_id);\n        },\n        prefill: {\n          name: name,\n          email: email,\n          contact: mobile,\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\",\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n        customer_id: customerId,\n        order_id: orderId,\n        save: 1\n      };\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Razor Pay Payment Integration</h2>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"tel\"\n            placeholder=\"Mobile Number\"\n            value={mobile}\n            onChange={(e) => setMobile(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <br />\n          <button\n            type=\"submit\"\n            onClick={handlePayment}\n          >\n            Submit Payment\n          </button>\n        </form>\n      </div>\n      <div>\n        <p>Customer ID: {customerId}</p>\n        <p>Order ID: {orderId}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RazorpayComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}