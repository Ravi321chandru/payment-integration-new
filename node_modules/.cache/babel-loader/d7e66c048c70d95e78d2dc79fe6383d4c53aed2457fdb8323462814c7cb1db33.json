{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAVICHANDRU\\\\Projects\\\\React JS\\\\payment-integration\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayComponent = () => {\n  _s();\n  const [customerId, setCustomerId] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  useEffect(() => {\n    const initializeRazorpay = async () => {\n      const instance = new window.Razorpay({\n        key_id: 'rzp_test_Bv7ynRgcpldwRg',\n        key_secret: '03SPtWNWANi7gLRTIPPjX4T3'\n      });\n      try {\n        const customerData = {\n          name: name,\n          contact: mobile,\n          email: email,\n          fail_existing: 0\n        };\n        const customer = await instance.customers.create(customerData);\n        setCustomerId(customer.id);\n        console.log(cus);\n        const orderData = {\n          amount: amount * 100,\n          currency: \"INR\",\n          receipt: \"receipt#1\"\n        };\n        const order = await instance.orders.create(orderData);\n        setOrderId(order.id);\n\n        // Save IDs to sessionStorage\n        sessionStorage.setItem('customerId', customer.id);\n        sessionStorage.setItem('orderId', order.id);\n      } catch (error) {\n        console.error('Razorpay customer creation failed:', error);\n      }\n    };\n    initializeRazorpay();\n  }, [name, amount, email, mobile]);\n  const handlePayment = e => {\n    e.preventDefault();\n    if (amount === \"\") {\n      alert(\"Please enter the amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_Bv7ynRgcpldwRg\",\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: name,\n          email: email,\n          contact: mobile\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        },\n        customerId: customerId,\n        orderId: orderId,\n        save: 1\n      };\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n\n  // Retrieve IDs from sessionStorage on component mount\n  useEffect(() => {\n    const storedCustomerId = sessionStorage.getItem('customerId');\n    const storedOrderId = sessionStorage.getItem('orderId');\n    if (storedCustomerId && storedOrderId) {\n      setCustomerId(storedCustomerId);\n      setOrderId(storedOrderId);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Razor Pay Payment Integration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          placeholder: \"Mobile Number\",\n          value: mobile,\n          onChange: e => setMobile(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handlePayment,\n          children: \"Submit Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Customer ID: \", customerId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(RazorpayComponent, \"EXxRZRm0ZcszgpnmgROYv+9Hb/M=\");\n_c = RazorpayComponent;\nexport default RazorpayComponent;\nvar _c;\n$RefreshReg$(_c, \"RazorpayComponent\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","RazorpayComponent","_s","customerId","setCustomerId","orderId","setOrderId","name","setName","email","setEmail","mobile","setMobile","amount","setAmount","initializeRazorpay","instance","window","Razorpay","key_id","key_secret","customerData","contact","fail_existing","customer","customers","create","id","console","log","cus","orderData","currency","receipt","order","orders","sessionStorage","setItem","error","handlePayment","e","preventDefault","alert","options","key","description","handler","response","razorpay_payment_id","prefill","notes","address","theme","color","save","pay","open","storedCustomerId","getItem","storedOrderId","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/RAVICHANDRU/Projects/React JS/payment-integration/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './style.css';\n\nconst RazorpayComponent = () => {\n  const [customerId, setCustomerId] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  useEffect(() => {\n    const initializeRazorpay = async () => {\n      const instance = new window.Razorpay({\n        key_id: 'rzp_test_Bv7ynRgcpldwRg',\n        key_secret: '03SPtWNWANi7gLRTIPPjX4T3',\n      });\n\n      try {\n        const customerData = {\n          name: name,\n          contact: mobile,\n          email: email,\n          fail_existing: 0,\n        };\n\n        const customer = await instance.customers.create(customerData);\n\n        setCustomerId(customer.id);\n        console.log(cus)\n\n        const orderData = {\n          amount: amount * 100,\n          currency: \"INR\",\n          receipt: \"receipt#1\"\n        };\n\n        const order = await instance.orders.create(orderData);\n\n        setOrderId(order.id);\n\n        // Save IDs to sessionStorage\n        sessionStorage.setItem('customerId', customer.id);\n        sessionStorage.setItem('orderId', order.id);\n\n      } catch (error) {\n        console.error('Razorpay customer creation failed:', error);\n      }\n    };\n\n    initializeRazorpay();\n  }, [name, amount, email, mobile]);\n\n  const handlePayment = (e) => {\n    e.preventDefault();\n    if (amount === \"\") {\n      alert(\"Please enter the amount.\");\n    } else {\n      var options = {\n        key: \"rzp_test_Bv7ynRgcpldwRg\",\n        amount: amount * 100,\n        currency: \"INR\",\n        name: \"Payment Integration\",\n        description: \"For shopping\",\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: name,\n          email: email,\n          contact: mobile,\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\",\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n        customerId: customerId,\n        orderId: orderId,\n        save: 1\n      };\n      var pay = new window.Razorpay(options);\n      pay.open();\n    }\n  };\n\n  // Retrieve IDs from sessionStorage on component mount\n  useEffect(() => {\n    const storedCustomerId = sessionStorage.getItem('customerId');\n    const storedOrderId = sessionStorage.getItem('orderId');\n\n    if (storedCustomerId && storedOrderId) {\n      setCustomerId(storedCustomerId);\n      setOrderId(storedOrderId);\n    }\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h2>Razor Pay Payment Integration</h2>\n        <form>\n        <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"tel\"\n            placeholder=\"Mobile Number\"\n            value={mobile}\n            onChange={(e) => setMobile(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <br />\n          <button\n            type=\"submit\"\n            onClick={handlePayment}\n          >\n            Submit Payment\n          </button>\n        </form>\n      </div>\n      <div>\n        <p>Customer ID: {customerId}</p>\n        <p>Order ID: {orderId}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RazorpayComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}